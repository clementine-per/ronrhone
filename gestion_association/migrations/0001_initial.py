# Generated by Django 3.0.5 on 2021-03-29 21:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Adoption",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(verbose_name="Date de l'adoption")),
                (
                    "montant",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Montant à payer",
                    ),
                ),
                (
                    "montant_restant",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Montant restant à payer",
                    ),
                ),
                (
                    "nb_jours",
                    models.IntegerField(
                        null=True,
                        verbose_name="Nombre de jours entre mise à l'adoption et "
                        "adoption effective",
                    ),
                ),
                (
                    "pre_visite",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        max_length=3,
                        verbose_name="Visite pré-adoption",
                    ),
                ),
                (
                    "visite_controle",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        max_length=3,
                        verbose_name="Visite de contrôle (2 mois)",
                    ),
                ),
                (
                    "date_visite",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Date de la visite de contrôle",
                    ),
                ),
                ("commentaire", models.CharField(blank=True, max_length=1000)),
                (
                    "annule",
                    models.BooleanField(default=False, verbose_name="Adoption annulée"),
                ),
                (
                    "acompte_verse",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                        verbose_name="Acompte versé",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Famille",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_mise_a_jour",
                    models.DateField(auto_now=True, verbose_name="Date de mise à jour"),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("DISPONIBLE", "Disponible"),
                            ("INDISPONIBLE", "Temporairement indisponible"),
                            ("INACTIVE", "Inactive"),
                        ],
                        default="DISPONIBLE",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "niveau",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DEBUTANT", "Débutant"),
                            ("INTERMEDIAIRE", "Intermédiaire"),
                            ("CONFIRME", "Confirmé"),
                        ],
                        default="DEBUTANT",
                        max_length=20,
                        verbose_name="Niveau",
                    ),
                ),
                (
                    "nb_animaux_historique",
                    models.IntegerField(null=True, verbose_name="Nombre d'animaux au total"),
                ),
                ("commentaire", models.CharField(blank=True, max_length=1000)),
                (
                    "taille_logement",
                    models.IntegerField(
                        null=True, verbose_name="Taille du logement (en mètres carrés)"
                    ),
                ),
                (
                    "longue_duree",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="OUI",
                        max_length=3,
                        verbose_name="Accepte les acceuils de longue durée",
                    ),
                ),
                ("nb_places", models.IntegerField(verbose_name="Nombre de places")),
                (
                    "type_animal",
                    models.CharField(
                        choices=[("CHAT", "Chat"), ("CHIEN", "Chien")],
                        default="CHAT",
                        max_length=30,
                        verbose_name="Type d'animal accueilli",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_mise_a_jour",
                    models.DateField(auto_now=True, verbose_name="Date de mise à jour"),
                ),
                ("prenom", models.CharField(max_length=30)),
                ("nom", models.CharField(max_length=150)),
                ("email", models.EmailField(max_length=150)),
                ("adresse", models.CharField(max_length=500)),
                (
                    "code_postal",
                    models.CharField(
                        max_length=5,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Veuillez entrer un code postal valide.",
                                regex="^[0-9]*$",
                            )
                        ],
                    ),
                ),
                ("ville", models.CharField(max_length=100)),
                (
                    "telephone",
                    models.CharField(
                        max_length=10,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Veuillez entrer un numéro de téléphone valide.",
                                regex="[0-9]{10}",
                            )
                        ],
                    ),
                ),
                ("date_inscription", models.DateField(auto_now_add=True)),
                ("profession", models.CharField(max_length=250)),
                ("commentaire", models.CharField(blank=True, max_length=1000)),
                (
                    "inactif",
                    models.BooleanField(
                        default=False,
                        verbose_name="Desactivé (Ne cocher que si vous ne souhaitez                                       plus gérer cette personne dans l'application) ",
                    ),
                ),
                (
                    "is_famille",
                    models.BooleanField(default=False, verbose_name="Famille d'accueil"),
                ),
                (
                    "is_adoptante",
                    models.BooleanField(default=False, verbose_name="Adoptante"),
                ),
                (
                    "is_benevole",
                    models.BooleanField(default=False, verbose_name="Bénévole"),
                ),
                (
                    "commentaire_benevole",
                    models.CharField(
                        blank=True,
                        max_length=1000,
                        verbose_name="Information sur le rôle de cette bénévole au sein "
                        "de l'association",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Preference",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sociabilisation",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                        verbose_name="Sociabilisation",
                    ),
                ),
                (
                    "exterieur",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                        verbose_name="Extérieur",
                    ),
                ),
                (
                    "quarantaine",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                        verbose_name="Quarantaine",
                    ),
                ),
                (
                    "biberonnage",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                        verbose_name="Biberonnage",
                    ),
                ),
                (
                    "presence",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BAS", "Bas"),
                            ("NORMAL", "Normal"),
                            ("ELEVE", "Elevé"),
                        ],
                        default="BAS",
                        max_length=10,
                        verbose_name="Niveau de présence",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TarifAdoption",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_animal",
                    models.CharField(
                        choices=[("CHAT", "Chat"), ("CHIEN", "Chien")],
                        max_length=30,
                        verbose_name="Type d'animal",
                    ),
                ),
                (
                    "sexe",
                    models.CharField(
                        choices=[("F", "Femelle"), ("M", "Mâle")],
                        max_length=30,
                        verbose_name="Sexe",
                    ),
                ),
                (
                    "sterilise",
                    models.CharField(
                        blank=True,
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        max_length=3,
                        verbose_name="Stérilisé",
                    ),
                ),
                (
                    "tranche_age",
                    models.CharField(
                        choices=[
                            ("ENFANT", "Enfant"),
                            ("ADULTE", "Adulte"),
                            ("SENIOR", "Sénior"),
                        ],
                        max_length=10,
                        verbose_name="Tranche d'âge",
                    ),
                ),
                (
                    "vaccin_ok",
                    models.CharField(
                        blank=True,
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        max_length=3,
                        verbose_name="Vaccins à jour",
                    ),
                ),
                (
                    "montant",
                    models.DecimalField(decimal_places=2, max_digits=7, verbose_name="Montant"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TarifBonSterilisation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_animal",
                    models.CharField(
                        choices=[("CHAT", "Chat"), ("CHIEN", "Chien")],
                        max_length=30,
                        verbose_name="Type d'animal",
                    ),
                ),
                (
                    "sexe",
                    models.CharField(
                        choices=[("F", "Femelle"), ("M", "Mâle")],
                        max_length=30,
                        verbose_name="Sexe",
                    ),
                ),
                (
                    "montant",
                    models.DecimalField(decimal_places=2, max_digits=7, verbose_name="Montant"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Indisponibilite",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_debut", models.DateField(verbose_name="Date de départ")),
                ("date_fin", models.DateField(verbose_name="Date de retour")),
                (
                    "famille",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_association.Famille",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="famille",
            name="personne",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.PROTECT,
                to="gestion_association.Person",
                verbose_name="Personne",
            ),
        ),
        migrations.AddField(
            model_name="famille",
            name="preference",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="gestion_association.Preference",
            ),
        ),
        migrations.CreateModel(
            name="BonSterilisation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_max", models.DateField(verbose_name="Date d'expiration")),
                (
                    "envoye",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                        verbose_name="Bon envoyé",
                    ),
                ),
                (
                    "utilise",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                        verbose_name="Bon utilisé",
                    ),
                ),
                (
                    "date_utilisation",
                    models.DateField(blank=True, null=True, verbose_name="Date d'utilisation"),
                ),
                (
                    "adoption",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_association.Adoption",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Animal",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_mise_a_jour",
                    models.DateField(auto_now=True, verbose_name="Date de mise à jour"),
                ),
                ("nom", models.CharField(max_length=150)),
                ("circonstances", models.CharField(max_length=150)),
                (
                    "date_naissance",
                    models.DateField(blank=True, null=True, verbose_name="Date de naissance"),
                ),
                (
                    "date_arrivee",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de prise en charge"
                    ),
                ),
                (
                    "sexe",
                    models.CharField(choices=[("F", "Femelle"), ("M", "Mâle")], max_length=30),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("CHAT", "Chat"), ("CHIEN", "Chien")],
                        max_length=30,
                        verbose_name="Type d'animal",
                    ),
                ),
                (
                    "sterilise",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        max_length=3,
                        verbose_name="Stérilisé(e)",
                    ),
                ),
                (
                    "identification",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name="Numéro d'identification",
                    ),
                ),
                (
                    "lien_icad",
                    models.URLField(blank=True, max_length=150, verbose_name="Lien ICAD"),
                ),
                (
                    "fiv",
                    models.CharField(
                        choices=[
                            ("NT", "Non testé"),
                            ("POSITIVE", "Positif"),
                            ("NEGATIVE", "Négatif"),
                        ],
                        max_length=30,
                        verbose_name="FIV",
                    ),
                ),
                (
                    "felv",
                    models.CharField(
                        choices=[
                            ("NT", "Non testé"),
                            ("POSITIVE", "Positif"),
                            ("NEGATIVE", "Négatif"),
                        ],
                        max_length=30,
                        verbose_name="FELV",
                    ),
                ),
                (
                    "primo_vaccine",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                        verbose_name="Primo Vacciné(e)",
                    ),
                ),
                (
                    "vaccin_ok",
                    models.CharField(
                        choices=[("OUI", "Oui"), ("NON", "Non")],
                        default="NON",
                        max_length=3,
                        verbose_name="Vaccins à jour",
                    ),
                ),
                (
                    "date_dernier_vaccin",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Date du dernier rappel de vaccin",
                    ),
                ),
                (
                    "date_prochain_vaccin",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Date du prochain rappel de vaccin",
                    ),
                ),
                (
                    "date_sterilisation",
                    models.DateField(blank=True, null=True, verbose_name="Date de stérilisation"),
                ),
                (
                    "date_vermifuge",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date du dernier vermifuge"
                    ),
                ),
                (
                    "date_parasite",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Date d'administration de l'anti parasite",
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("A_ADOPTER", "A l'adoption"),
                            ("ADOPTION", "En cours d'adoption"),
                            ("SOCIA", "Sociabilisation"),
                            ("ADOPTE", "Adopté"),
                            ("ADOPTE_DEFINITIF", "Adopté définitivement"),
                            ("QUARANTAINE", "Quarantaine"),
                            ("SOIN", "En soin"),
                            ("SEVRAGE", "En sevrage"),
                            ("PERDU", "Perdu"),
                            ("DECEDE", "Décédé"),
                            ("RENDU", "Rendu à ses propriétaires"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "date_mise_adoption",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de mise à l'adoption"
                    ),
                ),
                ("commentaire", models.CharField(blank=True, max_length=1000)),
                ("commentaire_sante", models.CharField(blank=True, max_length=1000)),
                (
                    "tranche_age",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ENFANT", "Enfant"),
                            ("ADULTE", "Adulte"),
                            ("SENIOR", "Sénior"),
                        ],
                        max_length=10,
                        verbose_name="Tranche d'âge",
                    ),
                ),
                (
                    "adoptant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_association.Person",
                        verbose_name="Adoptant",
                    ),
                ),
                (
                    "animaux_lies",
                    models.ManyToManyField(
                        blank=True,
                        related_name="_animal_animaux_lies_+",
                        to="gestion_association.Animal",
                        verbose_name="Animaux liés",
                    ),
                ),
                (
                    "famille",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_association.Famille",
                    ),
                ),
                (
                    "preference",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_association.Preference",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="adoption",
            name="adoptant",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="gestion_association.Person",
            ),
        ),
        migrations.AddField(
            model_name="adoption",
            name="animal",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="gestion_association.Animal",
            ),
        ),
        migrations.AddField(
            model_name="adoption",
            name="personne_visite",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="visites_adotion",
                to="gestion_association.Person",
                verbose_name="Personne ayant effectué les visites",
            ),
        ),
    ]
